// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_dispose_scope/test/disposed_extensions/image_info_disposed_test.dart.
// Do not manually edit this file.

import 'dart:ui' as _i2;

import 'package:flutter/src/painting/image_stream.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeImage_0 extends _i1.Fake implements _i2.Image {}

class _FakeImageInfo_1 extends _i1.Fake implements _i3.ImageInfo {}

/// A class which mocks [ImageInfo].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockImageInfo extends _i1.Mock implements _i3.ImageInfo {
  MockImageInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Image get image => (super.noSuchMethod(Invocation.getter(#image),
      returnValue: _FakeImage_0()) as _i2.Image);
  @override
  double get scale =>
      (super.noSuchMethod(Invocation.getter(#scale), returnValue: 0.0)
          as double);
  @override
  int get sizeBytes =>
      (super.noSuchMethod(Invocation.getter(#sizeBytes), returnValue: 0)
          as int);
  @override
  _i3.ImageInfo clone() => (super.noSuchMethod(Invocation.method(#clone, []),
      returnValue: _FakeImageInfo_1()) as _i3.ImageInfo);
  @override
  bool isCloneOf(_i3.ImageInfo? other) =>
      (super.noSuchMethod(Invocation.method(#isCloneOf, [other]),
          returnValue: false) as bool);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
}
