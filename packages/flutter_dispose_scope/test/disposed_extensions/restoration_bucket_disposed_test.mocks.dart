// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_dispose_scope/test/disposed_extensions/restoration_bucket_disposed_test.dart.
// Do not manually edit this file.

import 'package:flutter/src/services/restoration.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRestorationBucket_0 extends _i1.Fake
    implements _i2.RestorationBucket {}

/// A class which mocks [RestorationBucket].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestorationBucket extends _i1.Mock implements _i2.RestorationBucket {
  MockRestorationBucket() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isReplacing =>
      (super.noSuchMethod(Invocation.getter(#isReplacing), returnValue: false)
          as bool);
  @override
  String get restorationId =>
      (super.noSuchMethod(Invocation.getter(#restorationId), returnValue: '')
          as String);
  @override
  P? read<P>(String? restorationId) =>
      (super.noSuchMethod(Invocation.method(#read, [restorationId])) as P?);
  @override
  void write<P>(String? restorationId, P? value) =>
      super.noSuchMethod(Invocation.method(#write, [restorationId, value]),
          returnValueForMissingStub: null);
  @override
  P? remove<P>(String? restorationId) =>
      (super.noSuchMethod(Invocation.method(#remove, [restorationId])) as P?);
  @override
  bool contains(String? restorationId) =>
      (super.noSuchMethod(Invocation.method(#contains, [restorationId]),
          returnValue: false) as bool);
  @override
  _i2.RestorationBucket claimChild(String? restorationId,
          {Object? debugOwner}) =>
      (super.noSuchMethod(
          Invocation.method(
              #claimChild, [restorationId], {#debugOwner: debugOwner}),
          returnValue: _FakeRestorationBucket_0()) as _i2.RestorationBucket);
  @override
  void adoptChild(_i2.RestorationBucket? child) =>
      super.noSuchMethod(Invocation.method(#adoptChild, [child]),
          returnValueForMissingStub: null);
  @override
  void finalize() => super.noSuchMethod(Invocation.method(#finalize, []),
      returnValueForMissingStub: null);
  @override
  void rename(String? newRestorationId) =>
      super.noSuchMethod(Invocation.method(#rename, [newRestorationId]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
}
